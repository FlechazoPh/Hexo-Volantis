{"version":3,"sources":["volantis-sw.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iterator","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","o","minLen","n","toString","slice","name","from","test","len","arr2","iter","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","val","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","handleFetch","_ref","_callee","event","url","_context","request","NetworkOnly","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","bytedance","sustech","cdn_match_list","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref2","_ref3","first","other","concat","createlog","util","fun","log","_len","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","warn","ready","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","logger","generate_uuid","c","r","Math","random","db","read","config","caches","open","cache","match","Request","encodeURIComponent","text","write","put","Response","compareVersion","a","b","v1","split","v2","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_context2","t0","mirror_time","setNewestVersion","_ref5","_callee4","f","_context4","fetch","FetchEngine","json","_ref6","_callee3","_context3","version","t1","t2","t3","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref10","_callee7","index","_context7","response","_x3","addEventListener","_ref11","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref12","_callee10","_context10","all","map","includes","clients","claim","_x5","_ref13","_callee11","_context11","respondWith","_x6","_ref14","_callee12","_context12","URL","pathname","_x7","_ref15","_callee13","_context13","resp","CacheRuntime","_x8","_ref16","_callee14","_context14","_x9","matchCache","_ref17","_callee15","_context15","_x10","_x11","_CacheRuntime","_callee18","_context18","matchCDN","protocol","clone","_ref18","_callee16","req","nav","_ref19","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_i","_cdn_match_list","item","_type","_key9","_url","ext","contentType","_context16","navigator","connection","mozConnection","webkitConnection","RegExp","location","origin","fullPath","exec","getContentType","arrayBuffer","buffer","headers","_x12","endsWith","list","indexOf","progress","_x13","_progress","_callee19","_context19","status","createPromiseAny","any","promises","errs","AggregateError","p","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref20","_callee17","tagged","_context17","dispatchEvent","_x14","e"],"mappings":"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","file":"../volantis-sw.js","sourcesContent":["// 全站打包上传 npm，sw 并发请求 cdn\nconst prefix = 'volantis-community';\nconst cacheSuffixVersion = '00000018-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = true;\nconst NPMPackage = \"@mhg/volantis-community\";\nlet NPMPackageVersion = \"1.0.1674055760561\";\nlet debug = true;\n// location.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    bytedance: 'https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\n\n"]}