{"version":3,"sources":["volantis-sw.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","undefined","res","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","minLen","toString","slice","name","from","test","len","arr2","iter","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","val","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","handleFetch","_ref","_callee","event","url","_context","request","NetworkOnly","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","bytedance","sustech","cdn_match_list","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref2","_ref3","first","other","concat","createlog","util","fun","log","_len","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","warn","ready","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","logger","generate_uuid","c","r","Math","random","db","read","config","caches","open","cache","match","Request","encodeURIComponent","text","write","put","Response","compareVersion","a","b","v1","split","v2","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_context2","t0","mirror_time","setNewestVersion","_ref5","_callee4","_context4","fetch","FetchEngine","json","_ref6","_callee3","_context3","version","t1","t2","t3","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref10","_callee7","index","_context7","response","_x3","addEventListener","_ref11","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref12","_callee10","_context10","all","map","includes","clients","claim","_x5","_ref13","_callee11","_context11","respondWith","_x6","_ref14","_callee12","_context12","URL","pathname","_x7","_ref15","_callee13","_context13","resp","CacheRuntime","_x8","_ref16","_callee14","_context14","_x9","matchCache","_ref17","_callee15","_context15","_x10","_x11","_CacheRuntime","_callee18","_context18","matchCDN","protocol","clone","_ref18","_callee16","req","nav","_ref19","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_iterator","_step","item","_type","_key9","_url","ext","contentType","_context16","navigator","connection","mozConnection","webkitConnection","RegExp","location","origin","fullPath","exec","getContentType","arrayBuffer","buffer","headers","_x12","endsWith","list","indexOf","progress","_x13","_progress","_callee19","_context19","status","createPromiseAny","any","promises","errs","AggregateError","p","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref20","_callee17","tagged","_context17","dispatchEvent","_x14"],"mappings":"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","file":"../volantis-sw.js","sourcesContent":["// 全站打包上传 npm，sw 并发请求 cdn\nconst prefix = 'volantis-community';\nconst cacheSuffixVersion = '00000018-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = true;\nconst NPMPackage = \"@mhg/volantis-community\";\nlet NPMPackageVersion = \"1.0.1668661567683\";\nlet debug = true;\n// location.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    bytedance: 'https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\n\n"]}