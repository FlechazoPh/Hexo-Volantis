{"version":3,"file":"../volantis-sw.js","names":["prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","handleFetch","async","event","url","request","test","NetworkOnly","CacheFirst","CacheAlways","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","combine","npm","eleme","unpkg","cdn_match_list","type","key","push","match","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","arr","fi","length","first","other","concat","createlog","util","args","log","apply","creategroup","groupCollapsed","colorUtils","bold","str","colorHash","wait","error","warn","ready","info","createChalk","name","firstToUpperCase","strArr","createChalkBg","createChalkGroup","chalk","group","end","groupEnd","bg","Object","keys","forEach","toLowerCase","replace","L","toUpperCase","i","logger","generate_uuid","c","r","Math","random","toString","self","db","read","config","Promise","resolve","reject","caches","open","then","cache","Request","encodeURIComponent","res","text","catch","write","value","put","Response","compareVersion","a","b","v1","split","v2","len","max","num1","parseInt","num2","mirrors","getLocalVersion","setNewestVersion","fetchAny","json","version","stack","setInterval","setTimeout","installFunction","index","response","addEventListener","skipWaiting","waitUntil","all","map","includes","delete","clients","claim","respondWith","URL","pathname","fetch","resp","CacheRuntime","matchCache","matchCDN","method","protocol","clone","req","nav","navigator","saveData","effectiveType","connection","mozConnection","webkitConnection","urls","urlObj","pathType","RegExp","location","origin","endsWith","list","indexOf","item","arrayBuffer","buffer","headers","progress","status","createPromiseAny","any","promises","Array","isArray","errs","AggregateError","p","err","controller","AbortController","signal","PromiseAll","abort"],"sources":["volantis-sw.js"],"mappings":"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","sourcesContent":["// 全站打包上传 npm，sw 并发请求 cdn\nconst prefix = 'volantis-community';\nconst cacheSuffixVersion = '00000003-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = true;\nconst NPMPackage = \"@mhg/volantis-community\";\nlet NPMPackageVersion = \"1.0.1655438979150\";\nlet debug = true;\n// location.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    eleme: 'https://npm.elemecdn.com',\n    unpkg: 'https://unpkg.com',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, match: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nlogger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  v1 = a.split('.');\n  v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  return fetchAny(mirrors)\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cacheing Runtime ${url.pathname}`);\n  logger.wait(`Cacheing url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[CacheRuntime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = url.split('?')[0].split('#')[0]\n      if (url.endsWith('/')) {\n        url += 'index.html'\n      } else {\n        const list = url.split('/')\n        const last = list[list.length - 1]\n        if (last.indexOf('.') === -1) {\n          url += '.html'\n        }\n      }\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  } else {\n    for (const item in cdn_match_list) {\n      if (new RegExp(item.match).test(req.url)) {\n        pathType = item.type\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + urlObj.pathname.replace('/' + pathType, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = fetchAny(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": \"text/html;charset=utf-8\"\n        }\n      }))\n  }\n  return res\n}\n\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(urls) {\n  const controller = new AbortController()\n  const signal = controller.signal\n\n  const PromiseAll = urls.map((url) => {\n    return new Promise((resolve, reject) => {\n      fetch(url, { signal })\n        .then(progress)\n        .then((res) => {\n          const r = res.clone()\n          if (r.status !== 200) reject(null)\n          controller.abort()\n          resolve(r)\n        })\n        .catch(() => reject(null))\n    })\n  })\n\n  if (!Promise.any) createPromiseAny()\n\n  return Promise.any(PromiseAll)\n    .then((res) => res)\n    .catch(() => null)\n}\n\n\n"]}