{"version":3,"sources":["volantis-sw.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","_typeof","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","minLen","toString","slice","name","from","test","len","arr2","iter","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","undefined","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","val","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","handleFetch","_ref","_callee","event","url","_context","request","NetworkOnly","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","bytedance","sustech","cdn_match_list","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref2","_ref3","first","other","concat","createlog","util","fun","log","_len","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","warn","ready","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","logger","generate_uuid","c","r","Math","random","db","read","config","caches","open","cache","match","Request","encodeURIComponent","res","text","write","put","Response","compareVersion","a","b","v1","split","v2","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_context2","t0","mirror_time","setNewestVersion","_ref5","_callee4","_context4","fetch","FetchEngine","json","_ref6","_callee3","_context3","version","t1","t2","t3","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref10","_callee7","index","_context7","response","_x3","addEventListener","_ref11","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref12","_callee10","_context10","all","map","includes","clients","claim","_x5","_ref13","_callee11","_context11","respondWith","_x6","_ref14","_callee12","_context12","URL","pathname","_x7","_ref15","_callee13","_context13","resp","CacheRuntime","_x8","_ref16","_callee14","_context14","_x9","matchCache","_ref17","_callee15","_context15","_x10","_x11","_CacheRuntime","_callee18","_context18","matchCDN","protocol","clone","_ref18","_callee16","req","nav","_ref19","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_iterator","_step","item","_type","_key9","_url","ext","contentType","_context16","navigator","connection","mozConnection","webkitConnection","RegExp","location","origin","fullPath","exec","getContentType","arrayBuffer","buffer","headers","_x12","endsWith","list","indexOf","progress","_x13","_progress","_callee19","_context19","status","createPromiseAny","any","promises","errs","AggregateError","p","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref20","_callee17","tagged","_context17","dispatchEvent","_x14"],"mappings":"AAAA,aAEA,SAASA,2BAA2BC,EAAGC,GAAkB,IAAIC,EAAuB,oBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAAe,IAAKE,EAAI,CAAE,GAAIG,MAAMC,QAAQN,KAAOE,EAAKK,4BAA4BP,KAAOC,GAAkBD,GAAyB,iBAAbA,EAAEQ,OAAqB,CAAMN,IAAIF,EAAIE,GAAI,IAAIO,EAAI,EAAOC,EAAI,WAAc,EAAG,MAAO,CAAEC,EAAGD,EAAGE,EAAG,WAAe,OAAIH,GAAKT,EAAEQ,OAAe,CAAEK,MAAM,GAAe,CAAEA,MAAM,EAAOC,MAAOd,EAAES,KAAQ,EAAGM,EAAG,SAAWC,GAAM,MAAMA,CAAI,EAAGC,EAAGP,EAAK,CAAE,MAAM,IAAIQ,UAAU,wIAA0I,CAAE,IAA6CC,EAAzCC,GAAmB,EAAMC,GAAS,EAAY,MAAO,CAAEV,EAAG,WAAeT,EAAKA,EAAGoB,KAAKtB,EAAI,EAAGY,EAAG,WAAe,IAAIW,EAAOrB,EAAGsB,OAAsC,OAA9BJ,EAAmBG,EAAKV,KAAaU,CAAM,EAAGR,EAAG,SAAWU,GAAOJ,GAAS,EAAMF,EAAMM,CAAK,EAAGR,EAAG,WAAe,IAAWG,GAAoC,MAAhBlB,EAAW,WAAWA,EAAW,WAAwC,CAAjC,QAAU,GAAImB,EAAQ,MAAMF,CAAK,CAAE,EAAK,CAC3+B,SAASO,QAAQC,EAAQC,GAAkB,IAAIC,EAAOC,OAAOD,KAAKF,GAAS,GAAIG,OAAOC,sBAAuB,CAAE,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAASC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UAAY,KAAKP,EAAKQ,KAAKC,MAAMT,EAAMG,EAAU,CAAE,OAAOH,CAAM,CACpV,SAASU,cAAcC,GAAU,IAAK,IAAI/B,EAAI,EAAGA,EAAIgC,UAAUjC,OAAQC,IAAK,CAAE,IAAIiC,EAAS,MAAQD,UAAUhC,GAAKgC,UAAUhC,GAAK,CAAC,EAAGA,EAAI,EAAIiB,QAAQI,OAAOY,IAAS,GAAIC,SAAQ,SAAUC,GAAOC,gBAAgBL,EAAQI,EAAKF,EAAOE,GAAO,IAAKd,OAAOgB,0BAA4BhB,OAAOiB,iBAAiBP,EAAQV,OAAOgB,0BAA0BJ,IAAWhB,QAAQI,OAAOY,IAASC,SAAQ,SAAUC,GAAOd,OAAOkB,eAAeR,EAAQI,EAAKd,OAAOK,yBAAyBO,EAAQE,GAAO,GAAI,CAAE,OAAOJ,CAAQ,CACzf,SAASK,gBAAgBI,EAAKL,EAAK9B,GAAiK,OAApJ8B,KAAOK,EAAOnB,OAAOkB,eAAeC,EAAKL,EAAK,CAAE9B,MAAOA,EAAOsB,YAAY,EAAMc,cAAc,EAAMC,UAAU,IAAkBF,EAAIL,GAAO9B,EAAgBmC,CAAK,CAChN,SAASG,mBAAmBC,GAAO,OAAOC,mBAAmBD,IAAQE,iBAAiBF,IAAQ9C,4BAA4B8C,IAAQG,oBAAsB,CACxJ,SAASA,qBAAuB,MAAM,IAAItC,UAAU,uIAAyI,CAC7L,SAASoC,mBAAmBD,GAAO,GAAIhD,MAAMC,QAAQ+C,GAAM,OAAOI,kBAAkBJ,EAAM,CAC1F,SAASK,QAAQT,GAAkC,OAAOS,QAAU,mBAAqBvD,QAAU,iBAAmBA,OAAOC,SAAW,SAAU6C,GAAO,cAAcA,CAAK,EAAI,SAAUA,GAAO,OAAOA,GAAO,mBAAqB9C,QAAU8C,EAAIU,cAAgBxD,QAAU8C,IAAQ9C,OAAOyD,UAAY,gBAAkBX,CAAK,EAAGS,QAAQT,EAAM,CAC/U,SAASY,SAASR,GAAO,OAAOS,gBAAgBT,IAAQE,iBAAiBF,IAAQ9C,4BAA4B8C,IAAQU,kBAAoB,CACzI,SAASA,mBAAqB,MAAM,IAAI7C,UAAU,4IAA8I,CAChM,SAASX,4BAA4BP,EAAGgE,GAAU,GAAKhE,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOyD,kBAAkBzD,EAAGgE,GAAS,IAAIpD,EAAIkB,OAAO8B,UAAUK,SAAS3C,KAAKtB,GAAGkE,MAAM,GAAI,GAAiE,MAAnD,WAANtD,GAAkBZ,EAAE2D,cAAa/C,EAAIZ,EAAE2D,YAAYQ,MAAgB,QAANvD,GAAqB,QAANA,EAAoBP,MAAM+D,KAAKpE,GAAc,cAANY,GAAqB,2CAA2CyD,KAAKzD,GAAW6C,kBAAkBzD,EAAGgE,QAAzG,CAA7O,CAA+V,CAC/Z,SAASP,kBAAkBJ,EAAKiB,IAAkB,MAAPA,GAAeA,EAAMjB,EAAI7C,UAAQ8D,EAAMjB,EAAI7C,QAAQ,IAAK,IAAIC,EAAI,EAAG8D,EAAO,IAAIlE,MAAMiE,GAAM7D,EAAI6D,EAAK7D,IAAO8D,EAAK9D,GAAK4C,EAAI5C,GAAM,OAAO8D,CAAM,CACtL,SAAShB,iBAAiBiB,GAAQ,GAAsB,oBAAXrE,QAAmD,MAAzBqE,EAAKrE,OAAOC,WAA2C,MAAtBoE,EAAK,cAAuB,OAAOnE,MAAM+D,KAAKI,EAAO,CAC7J,SAASV,gBAAgBT,GAAO,GAAIhD,MAAMC,QAAQ+C,GAAM,OAAOA,CAAK,CACpE,SAASoB,sBAfTA,oBAAA,WAAA,OAAAC,CAAA,EAAA,IAAAA,EAAA,CAAA,EAAAC,EAAA7C,OAAA8B,UAAAgB,EAAAD,EAAAE,eAAA7B,EAAAlB,OAAAkB,gBAAA,SAAAC,EAAAL,EAAAkC,GAAA7B,EAAAL,GAAAkC,EAAAhE,KAAA,EAAAiE,EAAA,mBAAA5E,OAAAA,OAAA,CAAA,EAAA6E,EAAAD,EAAA3E,UAAA,aAAA6E,EAAAF,EAAAG,eAAA,kBAAAC,EAAAJ,EAAAK,aAAA,gBAAA,SAAAC,EAAApC,EAAAL,EAAA9B,GAAA,OAAAgB,OAAAkB,eAAAC,EAAAL,EAAA,CAAA9B,MAAAA,EAAAsB,YAAA,EAAAc,cAAA,EAAAC,UAAA,IAAAF,EAAAL,EAAA,CAAA,IAAAyC,EAAA,CAAA,EAAA,GAAA,CAAA,MAAAlE,GAAAkE,EAAA,SAAApC,EAAAL,EAAA9B,GAAA,OAAAmC,EAAAL,GAAA9B,CAAA,CAAA,CAAA,SAAAwE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAA5B,qBAAAgC,EAAAJ,EAAAI,EAAAC,EAAA/D,OAAAgE,OAAAH,EAAA/B,WAAAmC,EAAA,IAAAC,EAAAN,GAAA,IAAA,OAAA1C,EAAA6C,EAAA,UAAA,CAAA/E,MAAAmF,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,CAAA,SAAAK,EAAAC,EAAAlD,EAAAmD,GAAA,IAAA,MAAA,CAAAC,KAAA,SAAAD,IAAAD,EAAA7E,KAAA2B,EAAAmD,GAAA,CAAA,MAAAjF,GAAA,MAAA,CAAAkF,KAAA,QAAAD,IAAAjF,EAAA,CAAA,CAAAuD,EAAAY,KAAAA,EAAA,IAAAgB,EAAA,CAAA,EAAA,SAAAV,IAAA,CAAA,SAAAW,IAAA,CAAA,SAAAC,IAAA,CAAA,IAAAC,EAAA,CAAA,EAAApB,EAAAoB,EAAAzB,GAAA,WAAA,OAAA0B,IAAA,IAAA,IAAAC,EAAA7E,OAAA8E,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAlC,GAAAC,EAAAtD,KAAAuF,EAAA7B,KAAAyB,EAAAI,GAAA,IAAAE,EAAAP,EAAA5C,UAAAgC,EAAAhC,UAAA9B,OAAAgE,OAAAW,GAAA,SAAAO,EAAApD,GAAA,CAAA,OAAA,QAAA,UAAAjB,SAAA,SAAAsE,GAAA5B,EAAAzB,EAAAqD,GAAA,SAAAb,GAAA,OAAAM,KAAAQ,QAAAD,EAAAb,EAAA,GAAA,GAAA,CAAA,SAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,GAAA,UAAAoB,EAAAnB,KAAA,CAAA,IAAAoB,EAAAD,EAAApB,IAAAtF,EAAA2G,EAAA3G,MAAA,OAAAA,GAAA,UAAA4C,QAAA5C,IAAA8D,EAAAtD,KAAAR,EAAA,WAAAsG,EAAAE,QAAAxG,EAAA4G,SAAAC,MAAA,SAAA7G,GAAAuG,EAAA,OAAAvG,EAAAwG,EAAAC,EAAA,IAAA,SAAApG,GAAAkG,EAAA,QAAAlG,EAAAmG,EAAAC,EAAA,IAAAH,EAAAE,QAAAxG,GAAA6G,MAAA,SAAAC,GAAAH,EAAA3G,MAAA8G,EAAAN,EAAAG,EAAA,IAAA,SAAAI,GAAA,OAAAR,EAAA,QAAAQ,EAAAP,EAAAC,EAAA,GAAA,CAAAA,EAAAC,EAAApB,IAAA,CAAA,IAAA0B,EAAA9E,EAAA0D,KAAA,UAAA,CAAA5F,MAAA,SAAAmG,EAAAb,GAAA,SAAA2B,IAAA,OAAA,IAAAX,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,GAAA,CAAA,OAAAO,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,GAAA,CAAA,SAAA9B,EAAAV,EAAAE,EAAAM,GAAA,IAAAiC,EAAA,iBAAA,OAAA,SAAAf,EAAAb,GAAA,GAAA,cAAA4B,EAAA,MAAA,IAAAC,MAAA,gCAAA,GAAA,cAAAD,EAAA,CAAA,GAAA,UAAAf,EAAA,MAAAb,EAAA,OAAA8B,GAAA,CAAA,IAAAnC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,CAAA,IAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,CAAA,IAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,CAAA,GAAAA,IAAA9B,EAAA,SAAA,OAAA8B,CAAA,CAAA,CAAA,GAAA,SAAArC,EAAAkB,OAAAlB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,GAAA,UAAAL,EAAAkB,OAAA,CAAA,GAAA,mBAAAe,EAAA,MAAAA,EAAA,YAAAjC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,IAAA,KAAA,WAAAL,EAAAkB,QAAAlB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA4B,EAAA,YAAA,IAAAR,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,GAAA,WAAAyB,EAAAnB,KAAA,CAAA,GAAA2B,EAAAjC,EAAAlF,KAAA,YAAA,iBAAA2G,EAAApB,MAAAE,EAAA,SAAA,MAAA,CAAAxF,MAAA0G,EAAApB,IAAAvF,KAAAkF,EAAAlF,KAAA,CAAA,UAAA2G,EAAAnB,OAAA2B,EAAA,YAAAjC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,CAAA,CAAA,CAAA,SAAAiC,EAAAF,EAAApC,GAAA,IAAAkB,EAAAkB,EAAA/H,SAAA2F,EAAAkB,QAAA,GAAAyB,YAAAzB,EAAA,CAAA,GAAAlB,EAAAoC,SAAA,KAAA,UAAApC,EAAAkB,OAAA,CAAA,GAAAkB,EAAA/H,SAAA,YAAA2F,EAAAkB,OAAA,SAAAlB,EAAAK,IAAAsC,UAAAL,EAAAF,EAAApC,GAAA,UAAAA,EAAAkB,QAAA,OAAAX,EAAAP,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAlF,UAAA,iDAAA,CAAA,OAAAoF,CAAA,CAAA,IAAAkB,EAAAtB,EAAAe,EAAAkB,EAAA/H,SAAA2F,EAAAK,KAAA,GAAA,UAAAoB,EAAAnB,KAAA,OAAAN,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAqC,EAAAnB,EAAApB,IAAA,OAAAuC,EAAAA,EAAA9H,MAAAkF,EAAAoC,EAAAS,YAAAD,EAAA7H,MAAAiF,EAAAvE,KAAA2G,EAAAU,QAAA,WAAA9C,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,IAAAsC,WAAA3C,EAAAoC,SAAA,KAAA7B,GAAAqC,GAAA5C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAlF,UAAA,oCAAA6E,EAAAoC,SAAA,KAAA7B,EAAA,CAAA,SAAAwC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,IAAA,KAAAA,IAAAC,EAAAE,SAAAH,EAAA,IAAA,KAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAArC,KAAA2C,WAAAhH,KAAA2G,EAAA,CAAA,SAAAM,EAAAN,GAAA,IAAAxB,EAAAwB,EAAAO,YAAA,CAAA,EAAA/B,EAAAnB,KAAA,gBAAAmB,EAAApB,IAAA4C,EAAAO,WAAA/B,CAAA,CAAA,SAAAxB,EAAAN,GAAAgB,KAAA2C,WAAA,CAAA,CAAAJ,OAAA,SAAAvD,EAAA/C,QAAAmG,EAAApC,MAAAA,KAAA8C,OAAA,EAAA,CAAA,SAAA1C,EAAA2C,GAAA,GAAAA,EAAA,CAAA,IAAAC,EAAAD,EAAAzE,GAAA,GAAA0E,EAAA,OAAAA,EAAApI,KAAAmI,GAAA,GAAA,mBAAAA,EAAAjI,KAAA,OAAAiI,EAAA,IAAAE,MAAAF,EAAAjJ,QAAA,CAAA,IAAAC,GAAA,EAAAe,EAAA,SAAAA,IAAA,OAAAf,EAAAgJ,EAAAjJ,QAAA,GAAAoE,EAAAtD,KAAAmI,EAAAhJ,GAAA,OAAAe,EAAAV,MAAA2I,EAAAhJ,GAAAe,EAAAX,MAAA,EAAAW,EAAA,OAAAA,EAAAV,MAAA4H,UAAAlH,EAAAX,MAAA,EAAAW,CAAA,EAAA,OAAAA,EAAAA,KAAAA,CAAA,CAAA,CAAA,MAAA,CAAAA,KAAA0G,EAAA,CAAA,SAAAA,IAAA,MAAA,CAAApH,MAAA4H,UAAA7H,MAAA,EAAA,CAAA,OAAA0F,EAAA3C,UAAA4C,EAAAxD,EAAA+D,EAAA,cAAA,CAAAjG,MAAA0F,EAAAtD,cAAA,IAAAF,EAAAwD,EAAA,cAAA,CAAA1F,MAAAyF,EAAArD,cAAA,IAAAqD,EAAAqD,YAAAvE,EAAAmB,EAAArB,EAAA,qBAAAT,EAAAmF,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAAnG,YAAA,QAAAoG,IAAAA,IAAAxD,GAAA,uBAAAwD,EAAAH,aAAAG,EAAA5F,MAAA,EAAAO,EAAAsF,KAAA,SAAAF,GAAA,OAAAhI,OAAAmI,eAAAnI,OAAAmI,eAAAH,EAAAtD,IAAAsD,EAAAI,UAAA1D,EAAAnB,EAAAyE,EAAA3E,EAAA,sBAAA2E,EAAAlG,UAAA9B,OAAAgE,OAAAiB,GAAA+C,CAAA,EAAApF,EAAAyF,MAAA,SAAA/D,GAAA,MAAA,CAAAsB,QAAAtB,EAAA,EAAAY,EAAAG,EAAAvD,WAAAyB,EAAA8B,EAAAvD,UAAAqB,GAAA,WAAA,OAAAyB,IAAA,IAAAhC,EAAAyC,cAAAA,EAAAzC,EAAA0F,MAAA,SAAA7E,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAiD,SAAA,IAAA7F,EAAA,IAAA2C,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAA1C,EAAAmF,oBAAArE,GAAAhB,EAAAA,EAAAhD,OAAAmG,MAAA,SAAAF,GAAA,OAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA0D,EAAAhD,MAAA,GAAA,EAAAwF,EAAAD,GAAA1B,EAAA0B,EAAA5B,EAAA,aAAAE,EAAA0B,EAAA/B,GAAA,WAAA,OAAA0B,IAAA,IAAArB,EAAA0B,EAAA,YAAA,WAAA,MAAA,oBAAA,IAAArC,EAAA7C,KAAA,SAAAyI,GAAA,IAAA3I,EAAAG,OAAAwI,GAAAzI,EAAA,GAAA,IAAA,IAAAe,KAAAjB,EAAAE,EAAAQ,KAAAO,GAAA,OAAAf,EAAA0I,UAAA,SAAA/I,IAAA,KAAAK,EAAArB,QAAA,CAAA,IAAAoC,EAAAf,EAAA2I,MAAA,GAAA5H,KAAAjB,EAAA,OAAAH,EAAAV,MAAA8B,EAAApB,EAAAX,MAAA,EAAAW,CAAA,CAAA,OAAAA,EAAAX,MAAA,EAAAW,CAAA,CAAA,EAAAkD,EAAAoC,OAAAA,EAAAd,EAAApC,UAAA,CAAAD,YAAAqC,EAAAwD,MAAA,SAAAiB,GAAA,GAAA/D,KAAAgE,KAAA,EAAAhE,KAAAlF,KAAA,EAAAkF,KAAA4B,KAAA5B,KAAA6B,MAAAG,UAAAhC,KAAA7F,MAAA,EAAA6F,KAAAyB,SAAA,KAAAzB,KAAAO,OAAA,OAAAP,KAAAN,IAAAsC,UAAAhC,KAAA2C,WAAA1G,QAAA2G,IAAAmB,EAAA,IAAA,IAAAtG,KAAAuC,KAAA,MAAAvC,EAAAwG,OAAA,IAAA/F,EAAAtD,KAAAoF,KAAAvC,KAAAwF,OAAAxF,EAAAD,MAAA,MAAAwC,KAAAvC,GAAAuE,UAAA,EAAAkC,KAAA,WAAAlE,KAAA7F,MAAA,EAAA,IAAAgK,EAAAnE,KAAA2C,WAAA,GAAAE,WAAA,GAAA,UAAAsB,EAAAxE,KAAA,MAAAwE,EAAAzE,IAAA,OAAAM,KAAAoE,IAAA,EAAAtC,kBAAA,SAAAuC,GAAA,GAAArE,KAAA7F,KAAA,MAAAkK,EAAA,IAAAhF,EAAAW,KAAA,SAAAsE,EAAAC,EAAAC,GAAA,OAAA1D,EAAAnB,KAAA,QAAAmB,EAAApB,IAAA2E,EAAAhF,EAAAvE,KAAAyJ,EAAAC,IAAAnF,EAAAkB,OAAA,OAAAlB,EAAAK,IAAAsC,aAAAwC,CAAA,CAAA,IAAA,IAAAzK,EAAAiG,KAAA2C,WAAA7I,OAAA,EAAAC,GAAA,IAAAA,EAAA,CAAA,IAAAuI,EAAAtC,KAAA2C,WAAA5I,GAAA+G,EAAAwB,EAAAO,WAAA,GAAA,SAAAP,EAAAC,OAAA,OAAA+B,EAAA,OAAA,GAAAhC,EAAAC,QAAAvC,KAAAgE,KAAA,CAAA,IAAAS,EAAAvG,EAAAtD,KAAA0H,EAAA,YAAAoC,EAAAxG,EAAAtD,KAAA0H,EAAA,cAAA,GAAAmC,GAAAC,EAAA,CAAA,GAAA1E,KAAAgE,KAAA1B,EAAAE,SAAA,OAAA8B,EAAAhC,EAAAE,UAAA,GAAA,GAAAxC,KAAAgE,KAAA1B,EAAAG,WAAA,OAAA6B,EAAAhC,EAAAG,WAAA,MAAA,GAAAgC,GAAA,GAAAzE,KAAAgE,KAAA1B,EAAAE,SAAA,OAAA8B,EAAAhC,EAAAE,UAAA,OAAA,CAAA,IAAAkC,EAAA,MAAA,IAAAnD,MAAA,0CAAA,GAAAvB,KAAAgE,KAAA1B,EAAAG,WAAA,OAAA6B,EAAAhC,EAAAG,WAAA,CAAA,CAAA,CAAA,EAAAV,OAAA,SAAApC,EAAAD,GAAA,IAAA,IAAA3F,EAAAiG,KAAA2C,WAAA7I,OAAA,EAAAC,GAAA,IAAAA,EAAA,CAAA,IAAAuI,EAAAtC,KAAA2C,WAAA5I,GAAA,GAAAuI,EAAAC,QAAAvC,KAAAgE,MAAA9F,EAAAtD,KAAA0H,EAAA,eAAAtC,KAAAgE,KAAA1B,EAAAG,WAAA,CAAA,IAAAkC,EAAArC,EAAA,KAAA,CAAA,CAAAqC,IAAA,UAAAhF,GAAA,aAAAA,IAAAgF,EAAApC,QAAA7C,GAAAA,GAAAiF,EAAAlC,aAAAkC,EAAA,MAAA,IAAA7D,EAAA6D,EAAAA,EAAA9B,WAAA,CAAA,EAAA,OAAA/B,EAAAnB,KAAAA,EAAAmB,EAAApB,IAAAA,EAAAiF,GAAA3E,KAAAO,OAAA,OAAAP,KAAAlF,KAAA6J,EAAAlC,WAAA7C,GAAAI,KAAA4E,SAAA9D,EAAA,EAAA8D,SAAA,SAAA9D,EAAA4B,GAAA,GAAA,UAAA5B,EAAAnB,KAAA,MAAAmB,EAAApB,IAAA,MAAA,UAAAoB,EAAAnB,MAAA,aAAAmB,EAAAnB,KAAAK,KAAAlF,KAAAgG,EAAApB,IAAA,WAAAoB,EAAAnB,MAAAK,KAAAoE,KAAApE,KAAAN,IAAAoB,EAAApB,IAAAM,KAAAO,OAAA,SAAAP,KAAAlF,KAAA,OAAA,WAAAgG,EAAAnB,MAAA+C,IAAA1C,KAAAlF,KAAA4H,GAAA9C,CAAA,EAAAiF,OAAA,SAAApC,GAAA,IAAA,IAAA1I,EAAAiG,KAAA2C,WAAA7I,OAAA,EAAAC,GAAA,IAAAA,EAAA,CAAA,IAAAuI,EAAAtC,KAAA2C,WAAA5I,GAAA,GAAAuI,EAAAG,aAAAA,EAAA,OAAAzC,KAAA4E,SAAAtC,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAA1C,CAAA,CAAA,EAAAkF,QAAA,SAAAvC,GAAA,IAAA,IAAAxI,EAAAiG,KAAA2C,WAAA7I,OAAA,EAAAC,GAAA,IAAAA,EAAA,CAAA,IAAAuI,EAAAtC,KAAA2C,WAAA5I,GAAA,GAAAuI,EAAAC,SAAAA,EAAA,CAAA,IAAAzB,EAAAwB,EAAAO,WAAA,GAAA,UAAA/B,EAAAnB,KAAA,CAAA,IAAAoF,EAAAjE,EAAApB,IAAAkD,EAAAN,EAAA,CAAA,OAAAyC,CAAA,CAAA,CAAA,MAAA,IAAAxD,MAAA,wBAAA,EAAAyD,cAAA,SAAAjC,EAAAb,EAAAC,GAAA,OAAAnC,KAAAyB,SAAA,CAAA/H,SAAA0G,EAAA2C,GAAAb,WAAAA,EAAAC,QAAAA,GAAA,SAAAnC,KAAAO,SAAAP,KAAAN,IAAAsC,WAAApC,CAAA,GAAA5B,CAAA,CAAA,SAAAiH,mBAAAC,EAAAtE,EAAAC,EAAAsE,EAAAC,EAAAlJ,EAAAwD,GAAA,IAAA,IAAAuC,EAAAiD,EAAAhJ,GAAAwD,GAAAtF,EAAA6H,EAAA7H,KAAA,CAAA,MAAA+G,GAAA,YAAAN,EAAAM,EAAA,CAAAc,EAAA9H,KAAAyG,EAAAxG,GAAAuJ,QAAA/C,QAAAxG,GAAA6G,KAAAkE,EAAAC,EAAA,CAAA,SAAAC,kBAAA5F,GAAA,OAAA,WAAA,IAAAV,EAAAiB,KAAAsF,EAAAvJ,UAAA,OAAA,IAAA4H,SAAA,SAAA/C,EAAAC,GAAA,IAAAqE,EAAAzF,EAAA7D,MAAAmD,EAAAuG,GAAA,SAAAH,EAAA/K,GAAA6K,mBAAAC,EAAAtE,EAAAC,EAAAsE,EAAAC,EAAA,OAAAhL,EAAA,CAAA,SAAAgL,EAAA3K,GAAAwK,mBAAAC,EAAAtE,EAAAC,EAAAsE,EAAAC,EAAA,QAAA3K,EAAA,CAAA0K,EAAAnD,UAAA,GAAA,CAAA,CAAA,IAAMuD,OAAS,qBACTC,mBAAqB,kCACrBC,WAAaF,OAAS,KAAOC,mBAC7BE,YAAc,CAClB,iBACA,aACA,sBAEEC,WAAY,EACVC,WAAa,0BACfC,kBAAoB,oBACpBC,OAAQ,EAENC,YAAW,WAAA,IAAAC,EAAAX,kBAAAtH,sBAAAuF,MAAG,SAAA2C,EAAOC,GAAK,IAAAC,EAAA,OAAApI,sBAAAa,MAAA,SAAAwH,GAAA,OAAA,OAAAA,EAAApC,KAAAoC,EAAAtL,MAAA,KAAA,EACD,GAAvBqL,EAAMD,EAAMG,QAAQF,KACtB,UAAUxI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,EAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SACduE,YAAYJ,IAAM,KAAA,EAAA,IAChB,UAAUvI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,EAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SACrBwE,WAAWL,IAAM,KAAA,EAAA,IACf,yBAAyBvI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,GAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SACpCyE,YAAYN,IAAM,KAAA,GAAA,IAChB,kBAAkBvI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,GAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SAC7ByE,YAAYN,IAAM,KAAA,GAAA,IAChB,mBAAmBvI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,GAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SAC9ByE,YAAYN,IAAM,KAAA,GAAA,IAChB,gBAAgBvI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,GAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SAC3ByE,YAAYN,IAAM,KAAA,GAAA,IAChB,qBAAqBvI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,GAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SAChCyE,YAAYN,IAAM,KAAA,GAAA,IAChB,aAAavI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,GAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SACxByE,YAAYN,IAAM,KAAA,GAAA,IAChB,gEAAgEvI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,GAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SAC3EyE,YAAYN,IAAM,KAAA,GAAA,IAChB,gBAAgBvI,KAAKwI,GAAI,CAAAC,EAAAtL,KAAA,GAAA,KAAA,CAAA,OAAAsL,EAAArE,OAAA,SAC3ByE,YAAYN,IAAM,KAAA,GAAA,OAAAE,EAAArE,OAAA,SAElBwE,WAAWL,IAAM,KAAA,GAAA,IAAA,MAAA,OAAAE,EAAAlC,OAAA,GAAA+B,EAAA,KAE3B,OAAA,SAzBgBQ,GAAA,OAAAT,EAAApK,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GA0BX2K,IAAM,CACVC,GAAI,CACFC,SAAU,8BACVC,OAAQ,iCACRC,MAAO,gCACPC,UAAW,oCACXC,MAAO,iCAETC,QAAS,CACPL,SAAU,mCACVC,OAAQ,sCACRC,MAAO,qCACPC,UAAW,yCACXC,MAAO,sCAETE,IAAK,CACHN,SAAU,+BACVC,OAAQ,kCACRC,MAAO,iCACPC,UAAW,qCACXC,MAAO,iCACPG,MAAO,oBACPC,MAAO,4BAETC,MAAO,CACLA,MAAO,yCACPC,QAAS,0BACTC,QAAS,oCACTC,UAAW,mDACXC,QAAS,mDAGPC,eAAiB,GACvB,IAAK,IAAM/H,QAAQ+G,IACjB,IAAK,IAAMxK,OAAOwK,IAAI/G,MACpB+H,eAAe/L,KAAK,CAAEgE,KAAYzD,IAAKwK,IAAI/G,MAAMzD,OAGrD,IAAMyL,SAAWC,QACXC,MAAQ,CACZC,MAAO,UACPC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,QAAS,UACTC,KAAM,UACNC,MAAO,WAEHC,IAAM,WAIV,IAHA,IAAIC,EAAK,CACP,IAEOrM,EAAM,EAAGA,EAAMH,UAAIjC,OAAQoC,IAAO,CACzC,IAAAsM,EAA8BtM,EAAG,GAAAH,UAAAjC,QAAHoC,EAAG8F,UAAAjG,UAAHG,GAAGuM,EAAAtL,SAAAqL,GAA1BE,EAAKD,EAAA,GAAKE,EAAKF,EAAAjL,MAAA,GACtB+K,EAAG,IAAMG,EACTH,EAAKA,EAAGK,OAAOD,EACjB,CACA,OAAOJ,CACT,EACMM,UAAY,SAACC,GAAI,OAAK,WAEkC,IAA5D,IAAMC,EAAc,SAARD,EAAkBnB,SAASmB,GAAQnB,SAASqB,IAAIC,EAAAlN,UAAAjC,OAF9BwL,EAAI,IAAA3L,MAAAsP,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5D,EAAI4D,GAAAnN,UAAAmN,GAGlCH,EAAInN,WAAM,EAAQ0J,EACpB,CAAC,EACK6D,YAAc,SAACL,GAAI,OAAK,WACQ,IAApC,IAAMC,EAAMpB,SAASyB,eAAeC,EAAAtN,UAAAjC,OADJwL,EAAI,IAAA3L,MAAA0P,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJhE,EAAIgE,GAAAvN,UAAAuN,GAEpCP,EAAInN,WAAM,EAAQ0J,EACpB,CAAC,EACKiE,WAAa,CACjBC,KAAM,SAACC,GACL,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAA,GAAAb,OAAUa,EAAG,uBAEf,IAAK,IAAIvN,EAAM,EAAGA,EAAMuN,EAAI3P,OAAQoC,IAClCuN,EAAIvN,IAAI,sBAEV,OAAOuN,CACT,GAEIC,UAAY,CAChBV,IAAK,QACLW,KAAM,OACNxI,MAAO,MACPyI,KAAM,SACNC,MAAO,QACP5H,KAAM,OACNiE,MAAO,WAEH4D,YAAc,SAACrM,GAAI,OAAK,WAAY,IAAA,IAAAsM,EAAAhO,UAAAjC,OAAR2P,EAAG,IAAA9P,MAAAoQ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHP,EAAGO,GAAAjO,UAAAiO,GACnC,GAAsB,WAAlBhN,QAAOyM,EAAI,IAAf,CAIA,IAAIQ,EAASR,EACM,iBAARA,GAAmC,iBAARA,IACpCQ,EAASV,WAAWG,UAAUjM,IAAOgM,IAEvCZ,UAAUpL,GAAK7B,WAAA,EAAAc,mBAAI4L,IAAIiB,WAAWC,KAAKD,WAAWG,UAAUjM,IAAM,IAAAmL,OAAKsB,iBAAiBzM,GAAK,QAAQwM,IALrG,MAFEpB,UAAUpL,GAAK7B,WAAA,EAAAc,mBAAI4L,IAAG1M,WAAA,EAAA,CAAC2N,WAAWC,KAAKD,WAAWG,UAAUjM,IAAM,IAAAmL,OAAKsB,iBAAiBzM,GAAK,SAAMmL,OAAKa,KAQ5G,CAAC,EACKU,cAAgB,SAAC1M,GAAI,OAAK,WAAY,IAAA,IAAA2M,EAAArO,UAAAjC,OAAR2P,EAAG,IAAA9P,MAAAyQ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHZ,EAAGY,GAAAtO,UAAAsO,GACrC,GAAsB,WAAlBrN,QAAOyM,EAAI,IAAf,CAIA,IAAIQ,EAASR,EACM,iBAARA,GAAmC,iBAARA,IACpCQ,EAASV,WAAWG,UAAUjM,IAAOgM,IAEvCZ,UAAUpL,GAAK7B,WAAA,EAAAc,mBAAI4L,IAAIiB,WAAWC,KAAKD,WAAU,KAAAX,OAAMsB,iBAAiBR,UAAUjM,MAAS,IAAAmL,OAAKsB,iBAAiBzM,GAAK,QAAQwM,IAL9H,MAFEpB,UAAUpL,GAAK7B,WAAA,EAAAc,mBAAI4L,IAAG1M,WAAA,EAAA,CAAC2N,WAAWC,KAAKD,WAAU,KAAAX,OAAMsB,iBAAiBR,UAAUjM,MAAS,IAAAmL,OAAKsB,iBAAiBzM,GAAK,SAAMmL,OAAKa,KAQrI,CAAC,EACKa,iBAAmB,SAAC7M,GAAI,OAAK,WAAY,IAAA,IAAA8M,EAAAxO,UAAAjC,OAAR2P,EAAG,IAAA9P,MAAA4Q,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAHf,EAAGe,GAAAzO,UAAAyO,GACxC,GAAsB,WAAlBxN,QAAOyM,EAAI,IAAf,CAIA,IAAIQ,EAASR,EACM,iBAARA,GAAmC,iBAARA,IACpCQ,EAASV,WAAWG,UAAUjM,IAAOgM,IAEvCN,YAAY1L,GAAK7B,WAAA,EAAAc,mBAAI4L,IAAIiB,WAAWC,KAAKD,WAAWG,UAAUjM,IAAM,IAAAmL,OAAKsB,iBAAiBzM,GAAK,QAAQwM,IALvG,MAFEd,YAAY1L,GAAK7B,WAAA,EAAAc,mBAAI4L,IAAG1M,WAAA,EAAA,CAAC2N,WAAWC,KAAKD,WAAWG,UAAUjM,IAAM,IAAAmL,OAAKsB,iBAAiBzM,GAAK,SAAMmL,OAAKa,KAQ9G,CAAC,EACKgB,MAAQ,CACZC,MAAO,CACLC,IAAKhD,SAASiD,UAEhBC,GAAI,CAAC,GAEPzP,OAAOD,KAAKuO,WAAWzN,SAAQ,SAAAC,GAC7BuO,MAAMvO,GAAO4N,YAAY5N,GACzBuO,MAAMC,MAAMxO,GAAOoO,iBAAiBpO,GACpCuO,MAAMI,GAAG3O,GAAOiO,cAAcjO,EAChC,IACA,IAAMgO,iBAAmB,SAACT,GAAG,OAAKA,EAAIqB,cAAcC,QAAQ,eAAe,SAACC,GAAC,OAAKA,EAAEC,aAAa,GAAC,EAClG7P,OAAOD,KAAK0M,OAAO5L,SAAQ,SAAAC,GACzBqN,WAAWrN,GAAO,SAACuN,GACjB,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAO,CAAA,KAAAb,OAAMa,GAAG,SAAAb,OAAaf,MAAM3L,KAErC,IAAK,IAAInC,EAAI,EAAGA,EAAI0P,EAAI3P,OAAQC,IAC9B0P,EAAI1P,IAAE,UAAA6O,OAAcf,MAAM3L,IAE5B,OAAOuN,CACT,EACAF,WAAU,KAAAX,OAAMsB,iBAAiBhO,KAAU,SAACuN,GAC1C,GAAmB,iBAARA,GAAmC,iBAARA,EACpC,MAAO,CAAA,KAAAb,OAAMa,GAAG,gDAAAb,OAA4D,UAAR1M,EAAkB,OAAS,OAAM,oCAAA0M,OAAmCf,MAAM3L,GAAI,MAEpJ,IAAK,IAAInC,EAAI,EAAGA,EAAI0P,EAAI3P,OAAQC,IAC9B0P,EAAI1P,IAAE,wEAAA6O,OAA4Ef,MAAM3L,GAAI,KAE9F,OAAOuN,CACT,CACF,IACA1K,KAAKmM,OAAMrP,cAAAA,cAAA,CACTyM,KACGmC,OACAlB,YAGAzD,QACHoF,OAAS,CACPlC,IAAK,WAAQ,EACbW,KAAM,WAAQ,EACdxI,MAAO,WAAQ,EACfyI,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACf5H,KAAM,WAAQ,EACdiE,MAAO,WAAQ,EACfwE,MAAO,CACL1B,IAAK,WAAQ,EACbW,KAAM,WAAQ,EACdxI,MAAO,WAAQ,EACfyI,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACf5H,KAAM,WAAQ,EACdiE,MAAO,WAAQ,EACfyE,IAAK,WAAQ,GAEfE,GAAI,CACF7B,IAAK,WAAQ,EACbW,KAAM,WAAQ,EACdxI,MAAO,WAAQ,EACfyI,KAAM,WAAQ,EACdC,MAAO,WAAQ,EACf5H,KAAM,WAAQ,EACdiE,MAAO,WAAQ,IAGnB0B,QAAQoB,IAAM,WAAQ,GAGxB,IAAMmC,cAAgB,WACpB,MAAO,uCAAuCJ,QAAQ,SAAS,SAAUK,GACvE,IAAIC,EAAoB,GAAhBC,KAAKC,SAAgB,EAC7B,OADyC,KAALH,EAAWC,EAAS,EAAJA,EAAU,GACrD9N,SAAS,GACpB,GACF,EACAwB,KAAKyM,GAAK,CACRC,KAAM,SAACvP,EAAKwP,GAEV,OADKA,IAAUA,EAAS,CAAE/L,KAAM,SACzB,IAAIgE,SAAQ,SAAC/C,EAASC,GAC3B8K,OAAOC,KAAKnG,YAAYxE,MAAK,SAAA4K,GAC3BA,EAAMC,MAAM,IAAIC,QAAO,sBAAAnD,OAAuBoD,mBAAmB9P,MAAS+E,MAAK,SAAUgL,GAClFA,GAAKrL,EAAQ,MAClBqL,EAAIC,OAAOjL,MAAK,SAAAiL,GAAI,OAAItL,EAAQsL,EAAK,GACvC,IAAE,UAAO,WACPtL,EAAQ,KACV,GACF,GACF,GACF,EACAuL,MAAO,SAACjQ,EAAK9B,GACX,OAAO,IAAIuJ,SAAQ,SAAC/C,EAASC,GAC3B8K,OAAOC,KAAKnG,YAAYxE,MAAK,SAAU4K,GACrCA,EAAMO,IAAI,IAAIL,QAAO,sBAAAnD,OAAuBoD,mBAAmB9P,KAAS,IAAImQ,SAASjS,IACrFwG,GACF,IAAE,UAAO,WACPC,GACF,GACF,GACF,GAEF,IAAMyL,eAAiB,SAACC,EAAGC,GAIzB,IAHA,IAAIC,EAAKF,EAAEG,MAAM,KACbC,EAAKH,EAAEE,MAAM,KACX9O,EAAM0N,KAAKsB,IAAIH,EAAG3S,OAAQ6S,EAAG7S,QAC5B2S,EAAG3S,OAAS8D,GACjB6O,EAAG9Q,KAAK,KAEV,KAAOgR,EAAG7S,OAAS8D,GACjB+O,EAAGhR,KAAK,KAEV,IAAK,IAAI5B,EAAI,EAAGA,EAAI6D,EAAK7D,IAAK,CAC5B,IAAM8S,EAAOC,SAASL,EAAG1S,IACnBgT,EAAOD,SAASH,EAAG5S,IACzB,GAAI8S,EAAOE,EACT,OAAOR,EACF,GAAIM,EAAOE,EAChB,OAAOP,CAEX,CACA,OAAOD,CACT,EAEMS,QAAU,CAAA,8BAAApE,OACgBhD,WAAU,WAAA,kCAAAgD,OACNhD,WAAU,WAAA,yCAAAgD,OACHhD,WAAU,YAE/CqH,gBAAe,WAAA,IAAAC,EAAA7H,kBAAAtH,sBAAAuF,MAAG,SAAA6J,IAAA,OAAApP,sBAAAa,MAAA,SAAAwO,GAAA,OAAA,OAAAA,EAAApJ,KAAAoJ,EAAAtS,MAAA,KAAA,EAAA,OAAAsS,EAAAtS,KAAA,EACI0Q,GAAGC,KAAK,gBAAe,KAAA,EAAA,GAAA2B,EAAAC,GAAAD,EAAAxL,KAAAwL,EAAAC,GAAA,CAAAD,EAAAtS,KAAA,EAAA,KAAA,CAAAsS,EAAAC,GAAIxH,kBAAiB,KAAA,EAAtEA,kBAAiBuH,EAAAC,GACjBnC,OAAOL,GAAG5I,KAAI,kBAAA2G,OAAmBhD,WAAU,KAAAgD,OAAI/C,oBAAoB,KAAA,EAAA,IAAA,MAAA,OAAAuH,EAAAlJ,OAAA,GAAAiJ,EAAA,KACpE,OAAA,WAHoB,OAAAD,EAAAtR,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GAIjBuR,YAAc,EACZC,iBAAgB,WAAA,IAAAC,EAAAnI,kBAAAtH,sBAAAuF,MAAG,SAAAmK,IAAA,IAAAlT,EAAA,OAAAwD,sBAAAa,MAAA,SAAA8O,GAAA,OAAA,OAAAA,EAAA1J,KAAA0J,EAAA5S,MAAA,KAAA,EAAA,GAClB6K,UAAS,CAAA+H,EAAA5S,KAAA,EAAA,KAAA,CAAA,OAAA4S,EAAA3L,OAAA,UAAA,KAAA,EASA,OANVxH,EAAI,KAINA,EAHI+S,aAAeN,QAAQlT,OAAS,GAGhC6T,MAAMX,QAASM,aAAeN,QAAQlT,OAAS,GAAM,IAFrD8T,YAAYZ,SAIlBM,cAAcI,EAAA3L,OAAA,SACPxH,EACJ0G,MAAK,SAAAgL,GAAG,OAAIA,EAAI4B,MAAM,IACtB5M,KAAI,WAAA,IAAA6M,EAAAzI,kBAAAtH,sBAAAuF,MAAC,SAAAyK,EAAM9B,GAAG,OAAAlO,sBAAAa,MAAA,SAAAoP,GAAA,OAAA,OAAAA,EAAAhK,KAAAgK,EAAAlT,MAAA,KAAA,EAAA,GACRmR,EAAIgC,QAAO,CAAAD,EAAAlT,KAAA,EAAA,KAAA,CAAA,KAAS,oBAAmB,KAAA,EACE,OADFkT,EAAAX,GACxBf,eAAc0B,EAAAE,GAACjC,EAAIgC,QAAOD,EAAAlT,KAAA,EAAQ0Q,GAAGC,KAAK,gBAAe,KAAA,EAAA,GAAAuC,EAAAG,GAAAH,EAAApM,KAAAoM,EAAAG,GAAA,CAAAH,EAAAlT,KAAA,EAAA,KAAA,CAAAkT,EAAAG,GAAItI,kBAAiB,KAAA,EAC7C,OAD6CmI,EAAAI,GAAAJ,EAAAG,GAAlGtI,mBAAiB,EAAAmI,EAAAX,IAAAW,EAAAE,GAAAF,EAAAI,IACjBlD,OAAOL,GAAGhB,MAAK,GAAAjB,OAAIhD,WAAU,KAAAgD,OAAI/C,oBAAoBmI,EAAAlT,KAAA,GAC/C0Q,GAAGW,MAAM,eAAgBtG,mBAAkB,KAAA,GAAA,IAAA,MAAA,OAAAmI,EAAA9J,OAAA,GAAA6J,EAAA,KAClD,OAAA,SAAAM,GAAA,OAAAP,EAAAlS,MAAAoE,KAAAjE,UAAA,CAAA,CALI,IAKH,UACK,SAAAoF,GACL+J,OAAO/J,MAAM,yBAA2BA,EAAMmN,OAASnN,GACzD,KAAE,KAAA,EAAA,IAAA,MAAA,OAAAuM,EAAAxJ,OAAA,GAAAuJ,EAAA,KACL,OAAA,WAtBqB,OAAAD,EAAA5R,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GAuBtBwS,YAAWlJ,kBAAAtH,sBAAAuF,MAAC,SAAAkL,IAAA,OAAAzQ,sBAAAa,MAAA,SAAA6P,GAAA,OAAA,OAAAA,EAAAzK,KAAAyK,EAAA3T,MAAA,KAAA,EAAA,OAAA2T,EAAA3T,KAAA,EACJyS,mBAAkB,KAAA,EAAA,IAAA,MAAA,OAAAkB,EAAAvK,OAAA,GAAAsK,EAAA,KACvB,KACHE,WAAUrJ,kBAAAtH,sBAAAuF,MAAC,SAAAqL,IAAA,OAAA5Q,sBAAAa,MAAA,SAAAgQ,GAAA,OAAA,OAAAA,EAAA5K,KAAA4K,EAAA9T,MAAA,KAAA,EAAA,OAAA8T,EAAA9T,KAAA,EACHyS,mBAAkB,KAAA,EAAA,IAAA,MAAA,OAAAqB,EAAA1K,OAAA,GAAAyK,EAAA,KACvB,KACH,IAAME,gBAAe,WAAA,IAAAC,EAAAzJ,kBAAAtH,sBAAAuF,MAAG,SAAAyL,IAAA,OAAAhR,sBAAAa,MAAA,SAAAoQ,GAAA,OAAA,OAAAA,EAAAhL,KAAAgL,EAAAlU,MAAA,KAAA,EAAA,OAAAkU,EAAAlU,KAAA,EAChBmS,kBAAiB,KAAA,EAAA,OAAA+B,EAAAjN,OAAA,SAChB4J,OAAOC,KAAKnG,WAAa,aAC7BxE,KAAI,WAAA,IAAAgO,EAAA5J,kBAAAtH,sBAAAuF,MAAC,SAAA4L,EAAgBrD,GAAK,IAAAsD,EAAA,OAAApR,sBAAAa,MAAA,SAAAwQ,GAAA,OAAA,OAAAA,EAAApL,KAAAoL,EAAAtU,MAAA,KAAA,EAAA,OAAAsU,EAAAtU,KAAA,EACd0Q,GAAGC,KAAK,QAAO,KAAA,EAAA,GAAA2D,EAAAxN,KAAA,CAAAwN,EAAAtU,KAAA,EAAA,KAAA,CAAA,OAAAsU,EAAAtU,KAAA,EAClB0Q,GAAGW,MAAM,OAAQhB,iBAAgB,KAAA,EAErCzF,YAAY5L,SACdoR,OAAOR,MAAMxE,MAAK,cAAA0C,OAAelD,YAAY5L,OAAM,YAC/CqV,EAAQ,EACZzJ,YAAYzJ,SAAQ,SAAUkK,GAC5B0F,EAAMC,MAAM,IAAIC,QAAQ5F,IAAMlF,MAAK,SAAUoO,GACvCA,EACFnE,OAAOrB,MAAK,cAAAjB,OAAezC,KAE3B+E,OAAOvB,KAAI,cAAAf,OAAezC,IAC1B0F,EAAMvD,IAAI,IAAIyD,QAAQ5F,OAExBgJ,IACczJ,YAAY5L,SACxBoR,OAAOrB,MAAK,aAAAjB,OAAclD,YAAY5L,OAAM,YAC5CoR,OAAOR,MAAMC,MAEjB,GACF,KACD,KAAA,EAAA,IAAA,MAAA,OAAAyE,EAAAlL,OAAA,GAAAgL,EAAA,KACF,OAAA,SAAAI,GAAA,OAAAL,EAAArT,MAAAoE,KAAAjE,UAAA,CAAA,CAvBI,IAuBH,UAAO,SAACoF,GACR+J,OAAO/J,MAAM,cAAgBA,EAAMmN,OAASnN,GAC9C,KAAE,KAAA,EAAA,IAAA,MAAA,OAAA6N,EAAA9K,OAAA,GAAA6K,EAAA,KACL,OAAA,WA7BoB,OAAAD,EAAAlT,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GA8BrBgD,KAAKwQ,iBAAiB,UAAS,WAAA,IAAAC,EAAAnK,kBAAAtH,sBAAAuF,MAAE,SAAAmM,EAAgBvJ,GAAK,OAAAnI,sBAAAa,MAAA,SAAA8Q,GAAA,OAAA,OAAAA,EAAA1L,KAAA0L,EAAA5U,MAAA,KAAA,EACpDoQ,OAAOL,GAAG3E,MAAM,0CAChB,IACEnH,KAAK4Q,cACLzJ,EAAM0J,UAAUf,mBAChB3D,OAAOL,GAAGhB,MAAM,iCAGlB,CAFE,MAAO1I,GACP+J,OAAO/J,MAAM,cAAgBA,EAAMmN,OAASnN,GAC9C,CAAC,KAAA,EAAA,IAAA,MAAA,OAAAuO,EAAAxL,OAAA,GAAAuL,EAAA,KACF,OAAA,SAAAI,GAAA,OAAAL,EAAA5T,MAAAoE,KAAAjE,UAAA,CAAA,CAT8B,IAU/BgD,KAAKwQ,iBAAiB,WAAU,WAAA,IAAAO,EAAAzK,kBAAAtH,sBAAAuF,MAAE,SAAAyM,EAAM7J,GAAK,OAAAnI,sBAAAa,MAAA,SAAAoR,GAAA,OAAA,OAAAA,EAAAhM,KAAAgM,EAAAlV,MAAA,KAAA,EAcvC,OAbJoQ,OAAOL,GAAG3E,MAAM,2CAA2C8J,EAAAhM,KAAA,EAEzDkC,EAAM0J,UACJjE,OAAOxQ,OAAO8F,MAAK,SAAC9F,GAClB,OAAOwI,QAAQsM,IAAI9U,EAAK+U,KAAI,SAAChU,GACtBA,EAAIiU,SAAS3K,sBAChBmG,OAAM,UAAQzP,GACdgP,OAAOL,GAAGhB,MAAM,2BAA6B3N,GAEjD,IACF,IAAE,UAAO,SAACiF,GACR+J,OAAO/J,MAAM,eAAiBA,EAAMmN,OAASnN,GAC/C,KACA6O,EAAAlV,KAAA,EACIiE,KAAKqR,QAAQC,QAAO,KAAA,EAC1BnF,OAAOL,GAAGhB,MAAM,mCAAmCmG,EAAAlV,KAAA,GAAA,MAAA,KAAA,EAAAkV,EAAAhM,KAAA,EAAAgM,EAAA3C,GAAA2C,EAAA,SAAA,GAEnD9E,OAAO/J,MAAM,eAAiB6O,EAAA3C,GAAMiB,OAAK0B,EAAA3C,KAAY,KAAA,GAAA,IAAA,MAAA,OAAA2C,EAAA9L,OAAA,GAAA6L,EAAA,KAAA,CAAA,CAAA,EAAA,IAAA,KAExD,OAAA,SAAAO,GAAA,OAAAR,EAAAlU,MAAAoE,KAAAjE,UAAA,CAAA,CApB+B,IAqBhCgD,KAAKwQ,iBAAiB,QAAO,WAAA,IAAAgB,EAAAlL,kBAAAtH,sBAAAuF,MAAE,SAAAkN,EAAMtK,GAAK,OAAAnI,sBAAAa,MAAA,SAAA6R,GAAA,OAAA,OAAAA,EAAAzM,KAAAyM,EAAA3V,MAAA,KAAA,EACxCoL,EAAMwK,YACJ3K,YAAYG,GAAM,UAAO,SAAC/E,GACxB+J,OAAO/J,MAAM,WAAa+E,EAAMG,QAAQF,IAAM,cAAgBhF,EAAMmN,OAASnN,GAC/E,KACD,KAAA,EAAA,IAAA,MAAA,OAAAsP,EAAAvM,OAAA,GAAAsM,EAAA,KACF,OAAA,SAAAG,GAAA,OAAAJ,EAAA3U,MAAAoE,KAAAjE,UAAA,CAAA,CAN4B,IAS7B,IAAMuK,YAAW,WAAA,IAAAsK,EAAAvL,kBAAAtH,sBAAAuF,MAAG,SAAAuN,EAAO3K,GAAK,OAAAnI,sBAAAa,MAAA,SAAAkS,GAAA,OAAA,OAAAA,EAAA9M,KAAA8M,EAAAhW,MAAA,KAAA,EAGX,OAFnBoQ,OAAOR,MAAMzI,KAAK,gBAAkB,IAAI8O,IAAI7K,EAAMG,QAAQF,KAAK6K,UAC/D9F,OAAOvB,KAAK,yBAA2BzD,EAAMG,QAAQF,KACrD+E,OAAOR,MAAMC,MAAMmG,EAAA/O,OAAA,SACZ4L,MAAMzH,EAAMG,UAAQ,KAAA,EAAA,IAAA,MAAA,OAAAyK,EAAA5M,OAAA,GAAA2M,EAAA,KAC5B,OAAA,SALgBI,GAAA,OAAAL,EAAAhV,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GAMXwK,WAAU,WAAA,IAAA2K,EAAA7L,kBAAAtH,sBAAAuF,MAAG,SAAA6N,EAAOjL,GAAK,OAAAnI,sBAAAa,MAAA,SAAAwS,GAAA,OAAA,OAAAA,EAAApN,KAAAoN,EAAAtW,MAAA,KAAA,EAAA,OAAAsW,EAAArP,OAAA,SACtB4J,OAAOG,MAAM5F,EAAMG,SAASpF,MAAK,SAAUoQ,GAGhD,OAFAnG,OAAOR,MAAMzI,KAAK,eAAiB,IAAI8O,IAAI7K,EAAMG,QAAQF,KAAK6K,UAC9D9F,OAAOvB,KAAK,yBAA2BzD,EAAMG,QAAQF,KACjDkL,GACFnG,OAAOR,MAAMb,MAAK,aAClBjC,QAAQoB,IAAIqI,GACZnG,OAAOR,MAAMC,MACbO,OAAOR,MAAMC,MACbzE,EAAM0J,UAAU0B,aAAapL,EAAMG,UAC5BgL,IAEPnG,OAAOtB,KAAI,cACXsB,OAAOR,MAAMC,MACN2G,aAAapL,EAAMG,SAE9B,KAAE,KAAA,EAAA,IAAA,MAAA,OAAA+K,EAAAlN,OAAA,GAAAiN,EAAA,KACH,OAAA,SAjBeI,GAAA,OAAAL,EAAAtV,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GAkBVyK,YAAW,WAAA,IAAAgL,EAAAnM,kBAAAtH,sBAAAuF,MAAG,SAAAmO,EAAOvL,GAAK,OAAAnI,sBAAAa,MAAA,SAAA8S,GAAA,OAAA,OAAAA,EAAA1N,KAAA0N,EAAA5W,MAAA,KAAA,EAAA,OAAA4W,EAAA3P,OAAA,SACvB4J,OAAOG,MAAM5F,EAAMG,SAASpF,MAAK,SAAUoQ,GAGhD,OAFAnG,OAAOR,MAAMzI,KAAK,gBAAkB,IAAI8O,IAAI7K,EAAMG,QAAQF,KAAK6K,UAC/D9F,OAAOvB,KAAK,yBAA2BzD,EAAMG,QAAQF,KACjDkL,GACFnG,OAAOR,MAAMb,MAAK,aAClBjC,QAAQoB,IAAIqI,GACZnG,OAAOR,MAAMC,MACbO,OAAOR,MAAMC,MACN0G,IAEPnG,OAAOtB,KAAI,cACXsB,OAAOR,MAAMC,MACN2G,aAAapL,EAAMG,SAE9B,KAAE,KAAA,EAAA,IAAA,MAAA,OAAAqL,EAAAxN,OAAA,GAAAuN,EAAA,KACH,OAAA,SAhBgBE,GAAA,OAAAH,EAAA5V,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GAkBX6V,WAAU,WAAA,IAAAC,EAAAxM,kBAAAtH,sBAAAuF,MAAG,SAAAwO,EAAO5L,GAAK,OAAAnI,sBAAAa,MAAA,SAAAmT,GAAA,OAAA,OAAAA,EAAA/N,KAAA+N,EAAAjX,MAAA,KAAA,EAAA,OAAAiX,EAAAhQ,OAAA,SACtB4J,OAAOG,MAAM5F,EAAMG,SAASpF,MAAK,SAAUoQ,GAEhD,OADAnG,OAAOR,MAAMzI,KAAK,yBAA2BiE,EAAMG,QAAQF,KACvDkL,GACFnG,OAAOR,MAAMb,MAAK,aAClBjC,QAAQoB,IAAIqI,GACZnG,OAAOR,MAAMC,MACbO,OAAOR,MAAMC,MACN0G,IAEPnG,OAAOtB,KAAI,cACXsB,OAAOR,MAAMC,MACN2G,aAAapL,EAAMG,SAE9B,KAAE,KAAA,EAAA,IAAA,MAAA,OAAA0L,EAAA7N,OAAA,GAAA4N,EAAA,KACH,OAAA,SAfeE,GAAA,OAAAH,EAAAjW,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GAef,SACcuV,aAAYW,GAAA,OAAAC,cAAAtW,MAAAoE,KAAAjE,UAAA,CAAA,SAAAmW,gBAyB1B,OAzB0BA,cAAA7M,kBAAAtH,sBAAAuF,MAA3B,SAAA6O,EAA4B9L,GAAO,IAAAF,EAAAkJ,EAAA,OAAAtR,sBAAAa,MAAA,SAAAwT,GAAA,OAAA,OAAAA,EAAApO,KAAAoO,EAAAtX,MAAA,KAAA,EACD,OAA1BqL,EAAM,IAAI4K,IAAI1K,EAAQF,KAAIiM,EAAAtX,KAAA,EACXuX,SAAShM,GAAQ,KAAA,EAA1B,GAARgJ,EAAQ+C,EAAAxQ,KACC,CAAAwQ,EAAAtX,KAAA,EAAA,KAAA,CAAA,OAAAsX,EAAAtX,KAAA,EACM6S,MAAMtH,GAAQ,UAAO,WAAA,OAAM,IAAI,IAAC,KAAA,EAAjDgJ,EAAQ+C,EAAAxQ,KAAA,KAAA,EAIY,GAFtBsJ,OAAOR,MAAMxE,MAAK,iBAAA0C,OAAkBzC,EAAI6K,WACxC9F,OAAOvB,KAAI,gBAAAf,OAAiBvC,EAAQF,MACpCyB,QAAQoB,IAAIqG,GAEW,QAAnBhJ,EAAQ9F,QAAqC,UAAhB4F,EAAImM,SAAqB,CAAAF,EAAAtX,KAAA,GAAA,KAAA,CAAA,OAAAsX,EAAAtX,KAAA,GACpC6Q,OAAOC,KAAKnG,WAAa,YAAW,KAAA,GAA7C2M,EAAAxQ,KACLwK,IAAI/F,EAASgJ,EAASkD,SAAQ,UAAO,SAAApR,GACzC+J,OAAO/J,MAAM,oBAAsBA,EAAMmN,OAASnN,IAC/B,uBAAfA,EAAM1D,OACRkO,OAAM,UAAQlG,WAAa,YAC3ByF,OAAOrB,MAAM,iBAEjB,IACAqB,OAAOrB,MAAK,eAAAjB,OAAgBvC,EAAQF,MAAOiM,EAAAtX,KAAA,GAAA,MAAA,KAAA,GAE3CoQ,OAAOtB,KAAI,mBAAAhB,OAAoBvC,EAAQF,MAAO,KAAA,GAE7B,OAAnB+E,OAAOR,MAAMC,MAAMyH,EAAArQ,OAAA,SACZsN,GAAQ,KAAA,GAAA,IAAA,MAAA,OAAA+C,EAAAlO,OAAA,GAAAiO,EAAA,MAChBvW,MAAAoE,KAAAjE,UAAA,CAED,IAAMsW,SAAQ,WAAA,IAAAG,EAAAnN,kBAAAtH,sBAAAuF,MAAG,SAAAmP,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhN,EAAAiN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxH,EAAAyH,EAAAC,EAAA,OAAA5V,sBAAAa,MAAA,SAAAgV,GAAA,OAAA,OAAAA,EAAA5P,KAAA4P,EAAA9Y,MAAA,KAAA,EAEM,GADzB6X,EAAMkB,UAASjB,EACeD,EAAImB,YAAcnB,EAAIoB,eAAiBpB,EAAIqB,kBAAoB,CAAC,EAA5FnB,EAAQD,EAARC,SAAUC,EAAaF,EAAbE,eACdD,IAAY,KAAKlV,KAAKmV,GAAc,CAAAc,EAAA9Y,KAAA,EAAA,KAAA,CACS,OAA/CoQ,OAAOtB,KAAK,mCAAmCgK,EAAA7R,OAAA,SACxC4L,MAAM+E,IAAI,KAAA,EAOnB,GALMK,EAAO,GACTC,EAAS,IAAIjC,IAAI2B,EAAIvM,KACrB8M,EAAWD,EAAOhC,SAAStE,MAAM,KAAK,GACtCwG,EAAc,GAEdvN,WAAa,IAAIsO,OAAOC,SAASC,QAAQxW,KAAK+U,EAAIvM,KAAM,CAE1D,IAAWjK,KADXgP,OAAOR,MAAMb,MAAM,qBAAuB6I,EAAIvM,KAC5BO,IAAIQ,IAChBf,EAAMO,IAAIQ,IAAIhL,GAAO,IAAM0J,WAAa,IAAMC,kBAAoB6M,EAAIvM,IAAI4E,QAAQmJ,SAASC,OAAQ,IACvGhO,EAAMiO,SAASA,SAASjO,IACxByB,QAAQoB,IAAI7C,GACZ4M,EAAKpX,KAAKwK,GAEZ+E,OAAOR,MAAMC,KACf,CAAC,GACIoI,EAAKjZ,OAAM,CAAA8Z,EAAA9Y,KAAA,GAAA,KAAA,CAAAsY,EAAA/Z,2BACKqO,gBAAckM,EAAA5P,KAAA,GAAAoP,EAAAnZ,IAAA,KAAA,GAAA,IAAAoZ,EAAAD,EAAAlZ,KAAAC,KAAA,CAAAyZ,EAAA9Y,KAAA,GAAA,KAAA,CAAlB,GAAJwY,EAAID,EAAAjZ,OACT,IAAI6Z,OAAOX,EAAKpX,KAAKyB,KAAK+U,EAAIvM,KAAI,CAAAyN,EAAA9Y,KAAA,GAAA,KAAA,CAEe,OADnDmY,EAAWK,EAAK3T,KAChBuT,EAAc,IAAIe,OAAOX,EAAKpX,KAAKmY,KAAK3B,EAAIvM,KAAK,GAAEyN,EAAA7R,OAAA,QAAA,IAAA,KAAA,GAAA6R,EAAA9Y,KAAA,GAAA,MAAA,KAAA,GAAA8Y,EAAA9Y,KAAA,GAAA,MAAA,KAAA,GAAA8Y,EAAA5P,KAAA,GAAA4P,EAAAvG,GAAAuG,EAAA,SAAA,IAAAR,EAAA/Y,EAAAuZ,EAAAvG,IAAA,KAAA,GAAA,OAAAuG,EAAA5P,KAAA,GAAAoP,EAAA7Y,IAAAqZ,EAAA/O,OAAA,IAAA,KAAA,GAIvD,IAAWlF,KAAQ+G,IACjB,GAAI/G,IAASsT,EAAU,CAErB,IAAW/W,KADXgP,OAAOR,MAAMb,MAAM,aAAAjB,OAAaqK,EAAQ,MAAOP,EAAIvM,KACjCO,IAAI/G,GACdwG,EAAMO,IAAI/G,GAAMzD,GAAOwW,EAAIvM,IAAI4E,QAAQmI,EAAa,IAC1DtL,QAAQoB,IAAI7C,GACZ4M,EAAKpX,KAAKwK,GAEZ+E,OAAOR,MAAMC,KACf,CACD,KAAA,GAmBF,OAdCsB,EADE8G,EAAKjZ,OACD8T,YAAYmF,GAEZpF,MAAM+E,KACH/M,WAAa,IAAIsO,OAAOC,SAASC,QAAQxW,KAAK+U,EAAIvM,OACrDuN,EAAMU,SAASA,SAAS1B,EAAIvM,MAAMuG,MAAM,KAAK5I,MAC7C6P,EAAcW,eAAeZ,GACnCzH,EAAMA,EACHhL,MAAK,SAAAgL,GAAG,OAAIA,EAAIsI,aAAa,IAC7BtT,MAAK,SAAAuT,GAAM,OAAI,IAAInI,SAASmI,EAAQ,CACnCC,QAAS,CACP,eAAgBd,IAElB,IAAC,UACI,WAAA,OAAM,IAAI,KACpBC,EAAA7R,OAAA,SACMkK,GAAG,KAAA,GAAA,IAAA,MAAA,OAAA2H,EAAA1P,OAAA,GAAAuO,EAAA,KAAA,CAAA,CAAA,GAAA,GAAA,GAAA,KAAA,KACX,OAAA,SA7DaiC,GAAA,OAAAlC,EAAA5W,MAAAoE,KAAAjE,UAAA,CAAA,CAAA,GA+DRqY,SAAW,SAACjO,GAEhB,IADAA,EAAMA,EAAIuG,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC3BiI,SAAS,KACfxO,GAAO,iBACF,CACL,IAAMyO,EAAOzO,EAAIuG,MAAM,MAEI,IADdkI,EAAKA,EAAK9a,OAAS,GACvB+a,QAAQ,OACf1O,GAAO,QAEX,CACA,OAAOA,CACT,EAAC,SACc2O,SAAQC,GAAA,OAAAC,UAAApZ,MAAAoE,KAAAjE,UAAA,CAAA,SAAAiZ,YAKtB,OALsBA,UAAA3P,kBAAAtH,sBAAAuF,MAAvB,SAAA2R,EAAwBhJ,GAAG,OAAAlO,sBAAAa,MAAA,SAAAsW,GAAA,OAAA,OAAAA,EAAAlR,KAAAkR,EAAApa,MAAA,KAAA,EACN,OADMoa,EAAA7H,GACdhB,SAAQ6I,EAAApa,KAAA,EAAOmR,EAAIsI,cAAa,KAAA,EAG1C,OAH0CW,EAAAhH,GAAAgH,EAAAtT,KAAAsT,EAAA/G,GAAE,CAC3CgH,OAAQlJ,EAAIkJ,OACZV,QAASxI,EAAIwI,SACdS,EAAAnT,OAAA,SAAA,IAAAmT,EAAA7H,GAAA6H,EAAAhH,GAAAgH,EAAA/G,KAAA,KAAA,EAAA,IAAA,MAAA,OAAA+G,EAAAhR,OAAA,GAAA+Q,EAAA,MACFrZ,MAAAoE,KAAAjE,UAAA,CAED,SAASqZ,mBACPzR,QAAQ0R,IAAM,SAAUC,GACtB,OAAO,IAAI3R,SAAQ,SAAC/C,EAASC,GAE3B,IAAIjD,GADJ0X,EAAW3b,MAAMC,QAAQ0b,GAAYA,EAAW,IAC7Bxb,OACfyb,EAAO,GACX,GAAY,IAAR3X,EAAW,OAAOiD,EAAO,IAAI2U,eAAe,+BAChDF,EAASrZ,SAAQ,SAACwZ,GACZA,aAAa9R,QACf8R,EAAExU,MACA,SAACgL,GAAG,OAAKrL,EAAQqL,EAAI,IACrB,SAACxR,GACCmD,IACA2X,EAAK5Z,KAAKlB,GACE,IAARmD,GAAWiD,EAAO,IAAI2U,eAAeD,GAC3C,IAGF1U,EAAO4U,EAEX,GACF,GACF,CACF,CAEA,SAASC,SAASC,GAChB,IAAMC,EAAa,IAAIC,gBAEvB,OAAOF,EAAKzF,KAAI,SAAAwC,GACd,OAAO,IAAI/O,SAAQ,SAAC/C,EAASC,GAC3B8M,MAAM+E,EAAK,CACToD,OAAQF,EAAWE,SAElB7U,KAAK6T,UACL7T,MAAK,SAAAgL,GACJ2J,EAAWG,QACQ,MAAf9J,EAAIkJ,OACNtU,EAAO,MAEPD,EAAQqL,EACZ,IAAE,UACK,WAAA,OAAMpL,EAAO,KAAK,GAC7B,GACF,GACF,CAEA,SAASmV,cAAcL,GACrB,IAAMM,EAAa,IAAIC,MAAM,sBACvBC,EAAc,IAAIC,YAExB,OAAOT,EAAKzF,IAAG,WAAA,IAAAmG,EAAAhR,kBAAAtH,sBAAAuF,MAAC,SAAAgT,EAAM5D,GAAG,IAAAkD,EAAAW,EAAA,OAAAxY,sBAAAa,MAAA,SAAA4X,GAAA,OAAA,OAAAA,EAAAxS,KAAAwS,EAAA1b,MAAA,KAAA,EAKrB,OAJI8a,EAAa,IAAIC,gBACnBU,GAAS,EACbJ,EAAY5G,iBAAiB0G,EAAWtW,MAAM,WACvC4W,GAAQX,EAAWG,OAC1B,IAAES,EAAAzU,OAAA,SACK,IAAI4B,SAAQ,SAAC/C,EAASC,GAC3B8M,MAAM+E,EAAK,CACToD,OAAQF,EAAWE,SAClB7U,MAAK,SAAAgL,GACNsK,GAAS,EACTJ,EAAYM,cAAcR,GACP,MAAfhK,EAAIkJ,OACNtU,EAAO,MAEPD,EAAQqL,EACZ,IAAE,UAAO,WAAA,OAAMpL,EAAO,KAAK,GAC7B,KAAE,KAAA,EAAA,IAAA,MAAA,OAAA2V,EAAAtS,OAAA,GAAAoS,EAAA,KACH,OAAA,SAAAI,GAAA,OAAAL,EAAAza,MAAAoE,KAAAjE,UAAA,CAAA,CAlBc,GAmBjB,CAEA,IAAM6R,YAAc,SAAC+H,GAEnB,OADKhS,QAAQ0R,KAAKD,mBACXzR,QAAQ0R,IAAIW,cAAcL,IAAO1U,MAAK,SAAAgL,GAAG,OAAIA,CAAG,IAAC,UAC/C,SAAC5R,GACN,MAAS,8CAALA,EACKsJ,QAAQ0R,IAAIK,SAASC,IACzB1U,MAAK,SAACgL,GAAG,OAAKA,CAAG,IAAC,UACZ,WAAA,OAAM,IAAI,IAEd,IACT,GACJ,EAEMqI,eAAiB,SAACZ,GACtB,OAAQA,GACN,IAAK,KACH,MAAO,kBACT,IAAK,OACH,MAAO,YACT,IAAK,MACH,MAAO,WACT,IAAK,OAkBL,IAAK,MACH,MAAO,mBAjBT,IAAK,OACH,MAAO,aACT,IAAK,MACH,MAAO,YACT,IAAK,OACH,MAAO,aACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MAEL,IAAK,MACH,MAAO,WACT,IAAK,cACH,MAAO,mBAGT,IAAK,QAEL,IAAK,OACH,MAAO,qBACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,2BACT,IAAK,OAEL,IAAK,MACH,MAAO,aACT,IAAK,MAEL,IAAK,OACH,MAAO,gBACT,IAAK,OACH,MAAO,wBACT,IAAK,QACH,MAAO,yBACT,IAAK,MACH,MAAO,uBACT,IAAK,MACH,MAAO,uBACT,IAAK,MACH,MAAO,gCACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,oBACT,IAAK,KACH,MAAO,mBACT,IAAK,MACH,MAAO,sBACT,IAAK,MACH,MAAO,+BACT,IAAK,KACH,MAAO,8BACT,IAAK,MACH,MAAO,qBACT,IAAK,OACH,MAAO,0EACT,IAAK,MACH,MAAO,2BACT,IAAK,OACH,MAAO,oEACT,IAAK,MACH,MAAO,gCACT,IAAK,OACH,MAAO,4EACT,IAAK,MACH,MAAO,kBACT,IAAK,MAkEL,QACE,MAAO,aAjET,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,aACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,kBACT,IAAK,MACH,MAAO,iBACT,IAAK,MACH,MAAO,cACT,IAAK,MACH,MAAO,gCACT,IAAK,MAEL,IAAK,OAEL,IAAK,MAEL,IAAK,MAEL,IAAK,MACH,MAAO,aACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,YACT,IAAK,MACH,MAAO,kBACT,IAAK,OACH,MAAO,gCACT,IAAK,MACH,MAAO,gBACT,IAAK,MACH,MAAO,oBACT,IAAK,MACH,MAAO,iBACT,IAAK,OACH,MAAO,aACT,IAAK,MAEL,IAAK,OAEL,IAAK,OACH,MAAO,eACT,IAAK,KAEL,IAAK,MACH,MAAO,cACT,IAAK,MAEL,IAAK,OAEL,IAAK,MACH,MAAO,aAIb","file":"../volantis-sw.js","sourcesContent":["// 全站打包上传 npm，sw 并发请求 cdn\nconst prefix = 'volantis-community';\nconst cacheSuffixVersion = '00000018-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = true;\nconst NPMPackage = \"@mhg/volantis-community\";\nlet NPMPackageVersion = \"1.0.1664461180596\";\nlet debug = true;\n// location.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    bytedance: 'https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\n\n"]}