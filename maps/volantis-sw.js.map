{"version":3,"sources":["volantis-sw.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","key","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iterator","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","minLen","n","toString","slice","name","from","test","len","i","arr2","iter","_regeneratorRuntime","hasOwnProperty","a","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","handleFetch","_ref","_callee","event","url","_context","request","NetworkOnly","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","bytedance","sustech","cdn_match_list","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref3","first","other","concat","createlog","util","fun","log","_len","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","warn","ready","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","logger","generate_uuid","Math","random","db","read","config","caches","open","cache","match","Request","encodeURIComponent","text","write","put","Response","compareVersion","b","v1","split","v2","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_context2","t0","mirror_time","setNewestVersion","_ref5","_callee4","_context4","fetch","FetchEngine","json","_ref6","_callee3","_context3","version","t1","t2","t3","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref10","_callee7","index","_context7","response","_x3","addEventListener","_ref11","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref12","_callee10","_context10","all","map","includes","clients","claim","_x5","_ref13","_callee11","_context11","respondWith","_x6","_ref14","_callee12","_context12","URL","pathname","_x7","_ref15","_callee13","_context13","resp","CacheRuntime","_x8","_ref16","_callee14","_context14","_x9","matchCache","_ref17","_callee15","_context15","_x10","_x11","_CacheRuntime","_callee18","_context18","matchCDN","protocol","clone","_ref18","_callee16","req","nav","_ref19","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_i","_cdn_match_list","item","_type","_key9","_url","ext","contentType","_context16","navigator","connection","mozConnection","webkitConnection","RegExp","location","origin","fullPath","exec","getContentType","arrayBuffer","buffer","headers","_x12","endsWith","list","indexOf","progress","_x13","_progress","_callee19","_context19","status","createPromiseAny","any","promises","errs","AggregateError","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref20","_callee17","tagged","_context17","dispatchEvent","_x14"],"mappings":"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","file":"../volantis-sw.js","sourcesContent":["// 全站打包上传 npm，sw 并发请求 cdn\nconst prefix = 'volantis-community';\nconst cacheSuffixVersion = '00000018-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = true;\nconst NPMPackage = \"@mhg/volantis-community\";\nlet NPMPackageVersion = \"1.0.1674055760561\";\nlet debug = true;\n// location.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    bytedance: 'https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\n"]}